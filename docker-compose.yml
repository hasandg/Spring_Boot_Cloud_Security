version: "3.5"

services:
  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    # Uncomment to enable debug logging
    # command: --logging.level.zipkin2=DEBUG

#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#  zookeeper:
#    image: "docker.io/bitnami/zookeeper:3"
#    ports:
#      - "2181:2181"
#    volumes:
#      - "zookeeper_data:/bitnami"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    image: "docker.io/bitnami/kafka:2-debian-10"
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#    depends_on:
#      - zookeeper
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - "9090:8080"
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

volumes:
  zookeeper_data:
    driver: local
#  kafka_data:
#    driver: local